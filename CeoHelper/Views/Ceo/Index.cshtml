@model CeoHelper.Shared.Models.Ceo.IndexViewModel
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer _localizer;

<div class="content-generator-form-area pt-50 pb-50">
    <div class="container">
        <div class="content-generator-form mb-30">
            <div class="row justify-content-between">
                <div class="col-lg-8 generated-text-container">
                    <textarea id='generatedText' class="form-control generated-text" placeholder="@_localizer["GeneratedTextDisplayedHere"]" disabled></textarea>
                    <div class="d-flex justify-content-between w-50">
                        <button id="likeBtn" type="button" class="rd-btn">@_localizer["Like"]</button>
                        <button id="dislikeBtn" type="button" class="rd-btn">@_localizer["Dislike"]</button>
                    </div>
                    <p id="contentGeneratorFormWarning" class="content-generator-form-warning mt-15 mb-15">@_localizer["PleaseClickLikeDislike"]</p>
                    <input type="hidden" id="requestId" name="requestId" />
                </div>
                <div class="col-lg-4 generator-parameters-container">
                    <p class="available-words"><span id="currentUserAvailableTokens">@ViewBag.Tokens</span> @_localizer["WordsAvailable"]</p>
                    <div class="progress">
                        <div class="progress-bar" role="progressbar" aria-label="Words available" aria-valuenow="@ViewBag.Tokens" aria-valuemin="0" aria-valuemax="5000"></div>
                    </div>
                    <p class="content-generator-form-warning">
                        @_localizer["ContentGeneratorFormWarning"]
                    </p>
                    <form id="mainCeoHelperForm">
                        <label class="page-form-control-label" for="language">@_localizer["ChooseLanguage"]</label>
                        <select class="form-control" id="language" name="language">
                            <option value="en-US">@_localizer["English"]</option>
                            <option value="ru-RU">@_localizer["Russian"]</option>
                        </select>
                        <div class="form-group">
                            <label class="control-label" for="textSize">@_localizer["TextSize"]</label>
                            <input class="form-control" type="text" id="textSize" name="textSize" oninput="this.value = this.value.replace(/[^0-9]/g, '').replace(/(\..*?)\..*/g, '$1').replace(/^0[^.]/, '0');" />
                        </div>
                        <div class="form-group">
                            <label class="control-label" for="keywords">@_localizer["Keywords"]</label>
                            <textarea class="form-control  keywords" id="keywords" name="keywords" placeholder="@_localizer["PutTeachKeyword"]"></textarea>
                        </div>
                        <div class="form-group">
                            <label class="control-label" for="keywordDensity">@_localizer["KeywordDensity"]</label>
                            <input class="form-control" type="text" id="keywordDensity" name="keywordDensity" oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*?)\..*/g, '$1').replace(/^0[^.]/, '0');" />
                        </div>
                        <div class="form-group">
                            <label class="control-label" for="personalization">@_localizer["Personalization"]</label>
                            <textarea class="form-control personalization" id="personalization" name="personalization" placeholder="@_localizer["TechnicalDetails"]"></textarea>
                        </div>
                        <div class="modal-footer">
                            <button type="submit" id="submitEnteredParams" class="rd-btn ceo-helper-page-submit">@_localizer["Generate"]</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="errorModal" tabindex="-1" role="dialog" aria-labelledby="errorModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="alert alert-danger" role="alert">
            <span class="error-text"></span>
        </div>
    </div>
</div>

@if (Model.IsFirstTime)
{
    <partial name="_CeoHelperForm" />
}

@section scripts{
    <script>
        $(document).ready(function () {
            updateAvailableTokensProgressBar();
            if ($('#generatedText').val() === '') {
                document.getElementById('likeBtn').style.display = 'none';
                document.getElementById('dislikeBtn').style.display = 'none';
                document.getElementById('contentGeneratorFormWarning').style.display = 'none';
            }
            if ($("#ceoHelperModal").length) {
                $("#ceoHelperModal").modal({ backdrop: 'static' });
                document.body.classList.add('on-modal-show-overflow-hidden');
            }
        });

        function updateAvailableTokensProgressBar() {
            const progressBar = document.querySelector('.progress-bar[role="progressbar"]');
            let totalSymbols = $(progressBar).attr('aria-valuemax');
            let availableSymbols = $(progressBar).attr('aria-valuenow');
            let percentage = Math.min(Math.max(Math.floor(availableSymbols / totalSymbols * 100), 0), 100);
            progressBar.style.width = percentage + '%';
        }

        function getFormData(form) {
            var rawJson = $(form).serializeArray();
            var model = {};

            $.map(rawJson, function (n, i) {
                model[n['name']] = n['value'];
            });

            return model;
        }

        $('form[id="ceoHelperForm"]').validate({
            rules: {
                textSize: 'required',
                keywords: 'required',
                keywordDensity: 'required'
            },
            messages: {
                textSize: '@_localizer["TextSizeError"]',
                keywords: '@_localizer["KeywordsError"]',
                keywordDensity: '@_localizer["KeywordsDensityError"]'
            },
            submitHandler: function (form) {
                var model = getFormData(form);
                $('#ceoHelperModal').hide();
                $('.modal-backdrop').hide();
                document.body.classList.remove('on-modal-show-overflow-hidden');
                document.body.style.setProperty('padding-right', '0px', 'important');
                $('#language').val(model.language).change();
                $('#textSize').val(model.textSize);
                $('#keywords').val(model.keywords);
                $('#keywordDensity').val(model.keywordDensity);
                $('#personalization').val(model.personalization);
                $('#mainCeoHelperForm').submit();
            }
        });

        $('form[id="mainCeoHelperForm"]').validate({
            rules: {
                textSize: 'required',
                keywords: 'required',
                keywordDensity: 'required'
            },
            messages: {
                textSize: '@_localizer["TextSizeError"]',
                keywords: '@_localizer["KeywordsError"]',
                keywordDensity: '@_localizer["KeywordsDensityError"]'
            },
            submitHandler: function (form) {
                var model = getFormData(form);
                $('#preloader').show();
                $.ajax({
                    url: "ceo/search",
                    type: "POST",
                    data: JSON.stringify(model),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (data) {
                        $('#preloader').hide();
                        //$('#generatedText').text(data.completions[0].text);
                        //mock generated content from Open AI
                        $('#generatedText').val(data.generatedContent);
                        $('input[name=requestId]:hidden').val(data.requestId);
                        $('#currentUserAvailableTokens').html(data.availableTokens);
                        const progressBar = document.querySelector('.progress-bar[role="progressbar"]');
                        $(progressBar).attr("aria-valuenow", data.availableTokens);
                        updateAvailableTokensProgressBar();
                        document.getElementById('likeBtn').style.display = 'block';
                        document.getElementById('dislikeBtn').style.display = 'block';
                        document.getElementById('contentGeneratorFormWarning').style.display = 'block';
                    },
                    error: function (error) {
                        $('#preloader').hide();
                        console.log(error);
                        document.querySelector(".error-text").innerHTML = error.responseJSON;
                        $("#errorModal").modal('show');
                        setTimeout(function () {
                            $('#errorModal').modal('hide');
                        }, 2000);
                    }
                });
            }
        });

        $('#likeBtn').on('click', function (evt) {
            evt.preventDefault();
            var requestId = $('input[name=requestId]:hidden').val();
            if (requestId === '' || requestId === undefined) return;
            $(this).attr('disabled', true);
            $('#dislikeBtn').attr('disabled', true);
            $('#preloader').show();
            $.ajax({
                url: "ceo/like?id=" + requestId,
                success: function (data) {
                    $('#preloader').hide();
                    console.log('The result is liked.');
                },
                error: function (error) {
                    $('#preloader').hide();
                    console.log(error);
                }
            });
        });

        $('#dislikeBtn').on('click', function (evt) {
            evt.preventDefault();
            var requestId = $('input[name=requestId]:hidden').val();
            if (requestId === '' || requestId === undefined) return;
            $(this).attr('disabled', true);
            $('#likeBtn').attr('disabled', true);
            $('#preloader').show();
            $.ajax({
                url: "ceo/dislike?id=" + requestId,
                success: function (data) {
                    $('#preloader').hide();
                    console.log('The result is disliked.');
                },
                error: function (error) {
                    $('#preloader').hide();
                    console.log(error);
                }
            });
        });
    </script>
}