@model CeoHelper.Shared.Models.Ceo.IndexViewModel
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer _localizer;

<div class="content-generator-form-area pt-50 pb-50">
    <div class="container">
        <div class="content-generator-form mb-30">
            <div class="row justify-content-between">
                <div class="col-lg-8 generated-text-container">
                    <textarea id='generatedText' class="form-control generated-text" placeholder="@_localizer["GeneratedTextDisplayedHere"]" disabled></textarea>
                    <div class="d-flex justify-content-between w-50">
                        <button id="likeBtn" type="button" class="rd-btn">@_localizer["Like"]</button>
                        <button id="dislikeBtn" type="button" class="rd-btn">@_localizer["Dislike"]</button>
                    </div>
                    <p id="contentGeneratorFormWarning" class="content-generator-form-warning mt-15 mb-15">@_localizer["PleaseClickLikeDislike"]</p>
                    <input type="hidden" id="requestId" name="requestId" />
                </div>
                <div class="col-lg-4 generator-parameters-container">
                    <p class="available-words"><span id="currentUserAvailableTokens">@ViewBag.Tokens</span> @_localizer["WordsAvailable"]</p>
                    <div class="progress">
                        <div class="progress-bar" role="progressbar" aria-label="Words available" aria-valuenow="@ViewBag.Tokens" aria-valuemin="0" aria-valuemax="5000"></div>
                    </div>
                    <p class="content-generator-form-warning">
                        @_localizer["ContentGeneratorFormWarning"]
                    </p>
                    <label class="page-form-control-label" for="languageSelector">@_localizer["ChooseLanguage"]</label>
                    <select class="form-control" id="languageSelector">
                        <option value="en-US">@_localizer["English"]</option>
                        <option value="ru-RU">@_localizer["Russian"]</option>
                    </select>
                    <div class="form-group">
                        <label class="control-label" for="textSize">@_localizer["TextSize"]</label>
                        <input class="form-control" type="text" id="textSize" oninput="this.value = this.value.replace(/[^0-9]/g, '').replace(/(\..*?)\..*/g, '$1').replace(/^0[^.]/, '0');" />
                        <span class="text-danger textSize-error"></span>
                    </div>
                    <div class="form-group">
                        <label class="control-label" for="keywords">@_localizer["Keywords"]</label>
                        <textarea class="form-control  keywords" id="keywords" placeholder="@_localizer["PutTeachKeyword"]"></textarea>
                        <span class="text-danger keywords-error"></span>
                    </div>
                    <div class="form-group">
                        <label class="control-label" for="keywordsDensity">@_localizer["KeywordDensity"]</label>
                        <input class="form-control" type="text" id="keywordsDensity" oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*?)\..*/g, '$1').replace(/^0[^.]/, '0');" />
                        <span class="text-danger keywordsDensity-error"></span>
                    </div>
                    <div class="form-group">
                        <label class="control-label" for="personalization">@_localizer["Personalization"]</label>
                        <textarea class="form-control personalization" id="personalization" placeholder="@_localizer["TechnicalDetails"]"></textarea>
                    </div>
                    <div class="modal-footer">
                        <button type="button" id="submitEnteredParams" class="rd-btn ceo-helper-page-submit">@_localizer["Generate"]</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="errorModal" tabindex="-1" role="dialog" aria-labelledby="errorModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="alert alert-danger" role="alert">
          <strong>Error:</strong>  Not enough tokens.
        </div>
    </div>
</div>

@if (Model.IsFirstTime)
{
    <partial name="_CeoHelperForm" />
}

@section scripts{
    <script>
        $(document).ready(function () {
            updateAvailableTokensProgressBar();
            if ($('#generatedText').val() === '') {
                document.getElementById('likeBtn').style.display = 'none';
                document.getElementById('dislikeBtn').style.display = 'none';
                document.getElementById('contentGeneratorFormWarning').style.display = 'none';
            }
            if ($("#ceoHelperModal").length) {
                $("#ceoHelperModal").modal({ backdrop: 'static' });
                document.body.classList.add('on-modal-show-overflow-hidden');
            }
        });

        function updateAvailableTokensProgressBar() {
            const progressBar = document.querySelector('.progress-bar[role="progressbar"]');
            let totalSymbols = $(progressBar).attr('aria-valuemax');
            let availableSymbols = $(progressBar).attr('aria-valuenow');
            let percentage = Math.min(Math.max(Math.floor(availableSymbols / totalSymbols * 100), 0), 100);
            progressBar.style.width = percentage + '%';
        }

        function validateCeoHelperForm() {
            if ($('#textSize').val() === '' || $('#textSize').val() === 0) {
                document.querySelector(".textSize-error").innerHTML = "The field \'Text Size\' is required.";
                document.querySelector(".textSize-error").style.display = "block";
                event.preventDefault();
                return false;
            }
            document.querySelector(".textSize-error").style.display = "none";
            if ($('#keywords').val() === '') {
                document.querySelector(".keywords-error").innerHTML = "The field \'Keywords\' can\'t be empty.";
                document.querySelector(".keywords-error").style.display = "block";
                event.preventDefault();
                return false;
            }
            document.querySelector(".keywords-error").style.display = "none";

            if ($('#keywordsDensity').val() === '' || $('#keywordsDensity').val() === 0) {
                document.querySelector(".keywordsDensity-error").innerHTML = "The field \'Keyword Density\' is required.";
                document.querySelector(".keywordsDensity-error").style.display = "block";
                event.preventDefault();
                return false;
            }
            document.querySelector(".keywordsDensity-error").style.display = "none";
            return true;
        }

        function validateModalParams() {
            if ($('#modal-form-textSize').val() === '' || $('#modal-form-textSize').val() === 0) {
                document.querySelector(".modal-form-textSize-error").innerHTML = "The field \'Text Size\' is required.";
                document.querySelector(".modal-form-textSize-error").style.display = "block";
                event.preventDefault();
                return false;
            }
            document.querySelector(".modal-form-textSize-error").style.display = "none";
            if ($('#modal-form-keywords').val() === '') {
                document.querySelector(".modal-form-keywords-error").innerHTML = "The field \'Keywords\' can\'t be empty.";
                document.querySelector(".modal-form-keywords-error").style.display = "block";
                event.preventDefault();
                return false;
            }
            document.querySelector(".modal-form-keywords-error").style.display = "none";

            if ($('#modal-form-keywordsDensity').val() === '' || $('#modal-form-keywordsDensity').val() === 0) {
                document.querySelector(".modal-form-keywordsDensity-error").innerHTML = "The field \'Keyword Density\' is required.";
                document.querySelector(".modal-form-keywordsDensity-error").style.display = "block";
                event.preventDefault();
                return false;
            }
            document.querySelector(".modal-form-keywordsDensity-error").style.display = "none";
            return true;
        }

        $('#submitEnteredParamsFromModal').on('click', function (evt) {
            evt.preventDefault();
            if (!validateModalParams()) return;
            let language = $('#modal-form-languageSelector').find(":selected").val();
            $('#languageSelector').val(language).change();
            let textSize = $('#modal-form-textSize').val();
            $('#textSize').val(textSize);
            let keywords = $('#modal-form-keywords').val();
            $('#keywords').val(keywords);
            let keywordsDensity = $('#modal-form-keywordsDensity').val();
            $('#keywordsDensity').val(keywordsDensity);
            let personalization = $('#modal-form-personalization').val();
            $('#personalization').val(personalization);
            $('#ceoHelperModal').hide();
            $('.modal-backdrop').hide();
            document.body.classList.remove('on-modal-show-overflow-hidden');
            document.body.style.setProperty('padding-right', '0px', 'important');
            $('#submitEnteredParams').click();
        });

        $(function () {
            $('#submitEnteredParams').on('click', function (evt) {
                evt.preventDefault();
                if (!validateCeoHelperForm()) return;
                let language = $('#languageSelector').find(":selected").val();
                let textSize = $('#textSize').val();
                let keywords = $('#keywords').val();
                let keywordsDensity = $('#keywordsDensity').val();
                let personalization = $('#personalization').val();
                $('#preloader').show();
                $.ajax({
                    url: "ceo/search",
                    type: "POST",
                    data: JSON.stringify(
                        {
                            language: language,
                            textSize: textSize,
                            keywords: keywords,
                            keywordDensity: keywordsDensity,
                            personalization: personalization,
                        }
                    ),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (data) {
                        $('#preloader').hide();
                        //$('#generatedText').text(data.completions[0].text);
                        //mock generated content from Open AI
                        $('#generatedText').val(data.generatedContent);
                        $('input[name=requestId]:hidden').val(data.requestId);
                        $('#currentUserAvailableTokens').html(data.availableTokens);
                        const progressBar = document.querySelector('.progress-bar[role="progressbar"]');
                        $(progressBar).attr("aria-valuenow", data.availableTokens);
                        updateAvailableTokensProgressBar();
                        document.getElementById('likeBtn').style.display = 'block';
                        document.getElementById('dislikeBtn').style.display = 'block';
                        document.getElementById('contentGeneratorFormWarning').style.display = 'block';
                    },
                    error: function (error) {
                        $('#preloader').hide();
                        $("#errorModal").modal('show');
                        setTimeout(function () {
                            $('#errorModal').modal('hide');
                        }, 2000);
                        console.log(error);
                    }
                });
            });

            $('#likeBtn').on('click', function (evt) {
                evt.preventDefault();
                var requestId = $('input[name=requestId]:hidden').val();
                if (requestId === '' || requestId === undefined) return;
                $(this).attr('disabled', true);
                $('#dislikeBtn').attr('disabled', true);
                $('#preloader').show();
                $.ajax({
                    url: "ceo/like?id=" + requestId,
                    success: function (data) {
                        $('#preloader').hide();
                        console.log('The result is liked.');
                    },
                    error: function (error) {
                        $('#preloader').hide();
                        console.log(error);
                    }
                });
            });

            $('#dislikeBtn').on('click', function (evt) {
                evt.preventDefault();
                var requestId = $('input[name=requestId]:hidden').val();
                if (requestId === '' || requestId === undefined) return;
                $(this).attr('disabled', true);
                $('#likeBtn').attr('disabled', true);
                $('#preloader').show();
                $.ajax({
                    url: "ceo/dislike?id=" + requestId,
                    success: function (data) {
                        $('#preloader').hide();
                        console.log('The result is disliked.');
                    },
                    error: function (error) {
                        $('#preloader').hide();
                        console.log(error);
                    }
                });
            });
        });
    </script>
}